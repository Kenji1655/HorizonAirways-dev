/* 
    CONHECIMENTOS INTERESSANTES PARA ESSE SCRIPT:
    O COMANDO: SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL;
    DEVOLVE O ANO ATUAL. 
  
    QUANDO CRIAMOS UMA CONSTRAINT DO TIPO UNIQUE, ELA FUNCIONA
    COMO UM CAMPO QUE TAMBÉM NÃO PODE SE REPETIR ALÉM DA CHAVE PRIMÁRIA.
    EXEMPLO: NA TABELA DE AERONAVES, A REFERÊNCIA QUE VAI NA CAUDA
    DO AVIÃO É UMA INFORMAÇÃO QUE NÃO SE REPETE. PORTANTO, NÃO PODEM
    SER PERMITIDOS DOIS CADASTROS DE AERONAVES COM O MESMO NÚMERO DE 
    REFERENCIA. 
    
*/
DROP TABLE TRECHOS;

DROP SEQUENCE SEQ_AEROPORTOS;
DROP TABLE AEROPORTOS;

DROP SEQUENCE SEQ_AERONAVES;
DROP TABLE AERONAVES;

CREATE TABLE AEROPORTOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY, 
    NOME VARCHAR2(500) NOT NULL,
    SIGLA VARCHAR2(10) NOT NULL,
    CIDADE VARCHAR2(200) NOT NULL,
    PAIS VARCHAR2(100) NOT NULL,
    -- CRIANDO UMA CONSTRAINT PARA DIZER QUE O CAMPO
    -- SIGLA É ÚNICO, O QUE SIGNIFICA QUE NÃO PODEMOS
    -- TER DOIS AEROPORTOS CADASTRADOS COM A MESMA SIGLA.
    CONSTRAINT UN_SIGLA UNIQUE(SIGLA)
);

CREATE SEQUENCE SEQ_AEROPORTOS START WITH 1 INCREMENT BY 1;

CREATE TABLE AERONAVES(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    FABRICANTE VARCHAR2(100) NOT NULL,
    MODELO VARCHAR2(100) NOT NULL,
    ANO_FABRICACAO INTEGER NOT NULL,
    TOTAL_ASSENTOS INTEGER NOT NULL,
    REFERENCIA VARCHAR2(10) NOT NULL,
    
    -- ADICIONANDO ALGUMAS REGRAS INTERESSANTES
    -- RESTRINGINDO OS FABRICANTES EM 3:
    CONSTRAINT CK_FABRICANTE_VALIDO CHECK 
        (FABRICANTE IN ('Airbus', 'Boeing', 'Embraer')),
        
    -- ESSA REGRA SÓ PERMITE O CADASTRO DE AERONAVES A PARTIR
    -- DO ANO 1990 ATÉ 2023.
    CONSTRAINT CK_ANO_VALIDO CHECK 
        (ANO_FABRICACAO BETWEEN 1990 AND 2023),

    -- IMPOSSIBILITANDO CADASTRAR MENOS DE 150 ASSENTOS E MAIS DE 1000.
    CONSTRAINT CK_TOTAL_ASSENTOS CHECK
        (TOTAL_ASSENTOS BETWEEN 100 AND 1000),
    
    -- UNIQUE PARA O NUMERO DE REFERENCIA.
    CONSTRAINT UN_REFERENCIA UNIQUE (REFERENCIA)
);

CREATE SEQUENCE SEQ_AERONAVES START WITH 1 INCREMENT BY 1;

-- ESTA É A TABELA QUE ARMAZENARÁ O NOME DO TRECHO, 
-- AEROPORTO DE ORIGEM E DESTINO.
-- NOTE QUE INCRÍVEL A RESTRIÇÃO DE IMPEDIR QUE A ORIGEM E 
-- DESTINO SEJAM IGUAIS. 
-- UMA COISA MUITO INTERESSANTE: TABELA SE CHAVE PRIMÁRIA.
CREATE TABLE TRECHOS(
    NOME VARCHAR2(200) NOT NULL,
    ORIGEM INTEGER NOT NULL,
    DESTINO INTEGER NOT NULL,
    AERONAVE INTEGER NOT NULL,
    
    -- PRIMEIRA CONSTRAINT - IMPEDIR QUE ORIGEM E DESTINO SEJAM IGUAIS
    -- AFINAL UM TRECHO NÃO PODE TER A ORIGEM E DESTINO O MESMO AEROPORTO
    CONSTRAINT CK_ORIGEM_DESTINO_DIFERENTES CHECK (ORIGEM != DESTINO),
    
    -- CHAVE ESTRANGEIRA PARA O AEROPORTO DE ORIGEM.
    CONSTRAINT FK_ORIGEM_AEROPORTO FOREIGN KEY (ORIGEM) 
    REFERENCES AEROPORTOS(CODIGO),
    
    -- CHAVE ESTRANGEIRA PARA O AEROPORTO DE DESTINO.
    CONSTRAINT FK_DESTINO_AEROPORTO FOREIGN KEY (DESTINO)
    REFERENCES AEROPORTOS(CODIGO),
    
    -- CHAVE ESTRANGEIRA DE AERONAVE
    CONSTRAINT FK_AERONAVE FOREIGN KEY(AERONAVE)
    REFERENCES AERONAVES(CODIGO)
    
);

INSERT INTO AEROPORTOS 
(CODIGO, NOME, SIGLA, CIDADE, PAIS)
VALUES
(SEQ_AEROPORTOS.NEXTVAL, 'Viracopos', 'VCP', 'Campinas', 'Brasil');

INSERT INTO AEROPORTOS 
(CODIGO, NOME, SIGLA, CIDADE, PAIS)
VALUES
(SEQ_AEROPORTOS.NEXTVAL, 'Garulhos', 'GRU', 'Guarulhos', 'Brasil');

INSERT INTO AEROPORTOS 
(CODIGO, NOME, SIGLA, CIDADE, PAIS)
VALUES
(SEQ_AEROPORTOS.NEXTVAL, 'Fort Lauderdale-Hollywood', 'FLL', 
'Fort Lauderdale', 'Estados Unidos');

INSERT INTO AEROPORTOS 
(CODIGO, NOME, SIGLA, CIDADE, PAIS)
VALUES
(SEQ_AEROPORTOS.NEXTVAL, 'Charles de Gaulle', 'CDG', 
'Paris', 'França');

INSERT INTO AEROPORTOS 
(CODIGO, NOME, SIGLA, CIDADE, PAIS)
VALUES
(SEQ_AEROPORTOS.NEXTVAL, 'Flughafen Zürich', 'ZRH', 
'Zürich', 'Suiça');

-- INSERINDO ALGUMAS AERONAVES

INSERT INTO AERONAVES
(CODIGO, FABRICANTE, MODELO, ANO_FABRICACAO, 
TOTAL_ASSENTOS, REFERENCIA) VALUES 
(SEQ_AERONAVES.NEXTVAL, 'Boeing', '797', 2000, 360, 'AB-1234');

INSERT INTO AERONAVES
(CODIGO, FABRICANTE, MODELO, ANO_FABRICACAO, 
TOTAL_ASSENTOS, REFERENCIA) VALUES 
(SEQ_AERONAVES.NEXTVAL, 'Airbus', 'A380', 2020, 900, 'AB-8974');

INSERT INTO AERONAVES
(CODIGO, FABRICANTE, MODELO, ANO_FABRICACAO, 
TOTAL_ASSENTOS, REFERENCIA) VALUES 
(SEQ_AERONAVES.NEXTVAL, 'Airbus', 'A320', 2022, 320, 'XP-4421');

INSERT INTO AERONAVES
(CODIGO, FABRICANTE, MODELO, ANO_FABRICACAO, 
TOTAL_ASSENTOS, REFERENCIA) VALUES 
(SEQ_AERONAVES.NEXTVAL, 'Embraer', 'E195-E2', 2022, 144, 'EM-9832');

-- TRECHOS
INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Campinas(vcp) - Fort Lauderdale(FLL)', 1, 3, 4);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Fort Lauderdale(FLL) - Campinas(vcp)', 3, 1, 4);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Campinas(vcp) - Fort Lauderdale(FLL)', 1, 3, 3);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE) 
VALUES
('Fort Lauderdale(FLL) - Campinas(vcp)', 3, 1, 3);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Guarulhos(GRU) - Campinas(VCP)', 2, 1, 3);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Campinas(VCP) - Guarulhos(GRU)', 1, 2, 3);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Guarulhos(GRU) - Campinas(VCP)', 2, 1, 2);

INSERT INTO TRECHOS
(NOME, ORIGEM, DESTINO, AERONAVE)
VALUES
('Campinas(VCP) - Guarulhos(GRU)', 1, 2, 2);

COMMIT;

Select * from AERONAVES;